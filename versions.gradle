ext.deps = [:]
def versions = [:]

versions.support = "1.0.0"
versions.constraint_layout = "2.0.0-alpha2"
versions.material = "1.1.0-alpha01"
versions.ktx = "1.0.2"
versions.junit = "4.12"
versions.runner = "1.2.0"
versions.espresso = "3.2.0"
versions.livecycle = "2.0.0"
versions.navigation = "2.1.0-alpha05"
versions.paging = "2.1.0"
versions.retrofit = '2.6.0'
versions.okhttp = "3.12.0"
versions.okhttp_loggining = "3.14.0"
versions.glide = "4.9.0"
versions.room = "2.1.0-rc01"
def deps = [:]

def support = [:]
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.material_design = "com.google.android.material:material:$versions.material"
support.constraint = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.ktx = "androidx.core:core-ktx:$versions.ktx"
support.support = "androidx.legacy:legacy-support-v4:$versions.support"
support.ktx = "androidx.legacy:legacy-support-v4:$versions.support"
deps.support = support

def test = [:]
test.junit = "junit:junit:$versions.junit"
test.runner = "androidx.test:runner:$versions.runner"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso"
test.core_testing = "androidx.arch.core:core-testing:$versions.livecycle"
deps.test = test

def architecture = [:]
architecture.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.livecycle"
architecture.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:$versions.livecycle"
architecture.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$versions.livecycle"
architecture.navigation_fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
architecture.navigation_ui = "androidx.navigation:navigation-ui:$versions.navigation"
architecture.paging = "androidx.paging:paging-runtime:$versions.paging"
deps.architecture = architecture

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.scalaris = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.okhhtp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_loggining"
deps.okhttp = okhttp

def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
deps.room = room


ext.deps = deps


/*
com.squareup.okhttp3:okhttp:
def nav_version = "2.1.0-alpha05"

implementation "androidx.navigation:navigation-fragment:$nav_version" // For Kotlin use navigation-fragment-ktx
implementation "androidx.navigation:navigation-ui:$nav_version" // For Kotlin use navigation-ui-ktx

def paging_version = "2.1.0"

implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx

def work_version = "2.0.1"


// Kotlin + coroutines
implementation "androidx.work:work-runtime-ktx:$work_version"

//Retrofit2
implementation 'com.squareup.retrofit2:retrofit:2.6.0'
implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
implementation 'com.squareup.retrofit2:converter-scalars:2.6.0'
//Okhttp3
def okhttp3_version = "3.12.0"
implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
implementation 'com.squareup.okhttp3:logging-interceptor:3.14.0'

//glide
implementation 'com.github.bumptech.glide:glide:4.9.0'
annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

def room_version = "2.1.0-rc01"

implementation "androidx.room:room-runtime:$room_version"
annotationProcessor "androidx.room:room-compiler:$room_version"
// For Kotlin use kapt instead of annotationProcessor

// optional - Kotlin Extensions and Coroutines support for Room
implementation "androidx.room:room-ktx:$room_version"

// Test helpers
testImplementation "androidx.room:room-testing:$room_version"*/